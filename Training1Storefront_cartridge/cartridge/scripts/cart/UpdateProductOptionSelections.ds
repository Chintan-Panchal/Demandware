/**
 * UpdateProductOptionSelections.ds
 *
 * This script will process all product option selections and return a ProductOptionModel.  This script expects an
 * product option array of optionName/optionValue pairs. 
 *
 *   @input SelectedOptions : dw.util.ArrayList
 *   @input Product : dw.catalog.Product l
 *	 @output ProductOptionModel : dw.catalog.ProductOptionModel
 *
 */
importPackage( dw.catalog );
importPackage( dw.system );

function execute( pdict : PipelineDictionary ) : Number
{
	var product : Product = pdict.Product;
	var optionModel : ProductOptionModel = null;
	
	if (pdict.SelectedOptions != null)
	{
		optionModel = product.getOptionModel();
		
		// loop through all of the optionName/optionValue pairs
		var selectedProductOptions : Iterator = pdict.SelectedOptions.iterator();
		
		while(selectedProductOptions.hasNext())
		{
			var selectedProductOption = selectedProductOptions.next();		

			// if the option name isn't defined then return
			if (selectedProductOption.optionName == undefined)
			{
				pdict.ProductOptionModel = optionModel;
				return PIPELET_NEXT;
			}
			
			// check to make sure we are adding the option to the right product
			// by looking for the id in the option name, the list options could
			// be different when dealing a bundle/product set
			var removeLength = selectedProductOption.optionName.indexOf(product.ID);
			
			if (removeLength > 0) {
			
				// need to strip out the option string because it includes a form prefix, product id,  
				// and a "_" separator before the option id
				removeLength = removeLength + product.ID.length + 1;
				
				var selectedOptionID : String = selectedProductOption.optionName.substring(removeLength, selectedProductOption.optionName.length);
				
				var selectedOptionValueID : String = selectedProductOption.optionValue;
				
		        if (selectedOptionID != null)
		        {
		        	// loop through all the options of the product option model
		        	// to find the product option that matches the user selected one.
		        	var options : Iterator = optionModel.getOptions().iterator();
		    		while(options.hasNext())
					{
						var option : ProductOptoin = options.next();	
						
						// if the option id equals the selection option id, set the selected option		
						if (option.getID() == selectedOptionID)
						{
							var productOptionValue : ProductOptionValue = optionModel.getOptionValue(option, selectedOptionValueID);
							optionModel.setSelectedOptionValue(option, productOptionValue);
							break;
						}
					}
		        }
			}
		}
	}
	pdict.ProductOptionModel = optionModel;
    return PIPELET_NEXT;
}
